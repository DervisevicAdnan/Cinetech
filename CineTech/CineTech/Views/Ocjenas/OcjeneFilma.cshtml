@using Microsoft.AspNetCore.Identity
@model IEnumerable<CineTech.Models.Ocjena>
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager



@{
    if(SignInManager.IsSignedIn(User)){
        var currentUserId = await UserManager.GetUserAsync(User);
        var korisnik = await UserManager.GetUserIdAsync(currentUserId);
        //var username = await UserManager.GetUserNameAsync(currentUserId);

    }
    var isAdmin = User.IsInRole("Administrator");
    async Task<string> GetUserNameAsync(string userId)
    {
        var user = await UserManager.FindByIdAsync(userId);
        return user?.UserName;
    }

}

@{
    
        ViewData["Title"] = "OcjeneFilma";
    
}

<h1>Ocjene filma</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ocjenaFilma)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.komentar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.datum)
            </th>
            <th>
                @if (User.IsInRole("Administrator"))
                {

                    @Html.DisplayNameFor(model => model.korisnikId)
                }
            </th>
            <th>
                Korisnicko ime
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ocjenaFilma)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.komentar)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.datum)
                </td>
                <td>
                    @if (User.IsInRole("Administrator"))
                    {
                        @Html.DisplayFor(modelItem => item.korisnikId)
                    }
                </td>
                <td>
                    @{
                        var username = await GetUserNameAsync(item.korisnikId);
                        @username
                    }
                </td>
                <td>
                    @if (User.IsInRole("Administrator")||User.IsInRole("Korisnik"))
                    {
                        @if (@SignInManager.UserManager.Users.First(user => user.UserName == User.Identity.Name).Id == item.korisnikId || isAdmin)
                        {
                            <a asp-action="Edit" asp-route-id="@item.id">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.id">Delete</a>
                        }
                    }<a asp-action="Details" asp-route-id="@item.id">Details</a>


                </td>

            </tr>
            }
            <a asp-controller="Films" asp-action="Details" asp-route-id="@ViewBag.Ocjeneid">Back to list</a>
    </tbody>
</table>
